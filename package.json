{
  "name": "movies-and-vegetables",
  "version": "0.6.1",
  "scripts": {
    "tdd:unit": "mocha --watch test/unit/",
    "tdd:html-contracts": "mocha test/html-contracts --watch --timeout 5000",
    "tdd:tools": "mocha test/tools --watch --color --timeout 5000",
    "clear-html-cache": "rm test/tools/real-htmls-cache -r",
    "firefox": "web-ext -s src run",
    "coverage": "nyc --reporter=lcov mocha -R=progress --forbid-only test/unit/ && start coverage/lcov-report/index.html",
    "lint:eslint": "eslint --ignore-path .gitignore .",
    "lint:eslint:fix": "eslint --ignore-path .gitignore . --fix",
    "lint:webext": "web-ext -s src lint",
    "test": "echo ### COMMIT SUITE ### && npm-run-all --aggregate-output -p lint:* test:*",
    "test:end-to-end": "mocha test/end-to-end --forbid-only --timeout 120000 --color",
    "test:end-to-end:with-head": "set endToEndWithHead=1&& mocha test/end-to-end  --forbid-only --timeout 120000 --color",
    "test:html-contracts": "mocha test/html-contracts -R=progress --forbid-only --color --timeout 5000",
    "test:unit": "nyc --reporter=text-summary --check-coverage mocha -R=progress --forbid-only --color test/unit/",
    "test:tools": "mocha test/tools --color --forbid-only --timeout 5000",
    "build": "web-ext -s src build -i icons/icon.psd",
    "preversion": "npm run _force-develop-branch && npm test",
    "version": "npm run _bump-manifest-version && npm run _generate-changelog && git add src\\manifest.json changelog.json",
    "postversion": "npm run _merge-develop-to-master && npm run _push-everything",
    "_ci:unit-test": "nyc --reporter=lcov mocha --forbid-only test/unit/ && codecov",
    "_ci:deploy-to-amo": "web-ext sign -s src --channel listed -i icons/icon.psd | grep -q 'Your add-on has been submitted for review.' || error 1",
    "_force-develop-branch": "powershell -Command \"$branch = git branch --show-current; if ($branch -ne 'develop') {throw '### Version should be generated only on develop branch! ###'} \"",
    "_bump-manifest-version": "powershell -Command \"$manifest = ((Get-Content -encoding utf8 src/manifest.json) -replace '(?<=\\\"version\\\": \\\")\\d+\\.\\d+\\.\\d+(?=\\\",)', $env:npm_package_version); [System.IO.File]::WriteAllLines('src/manifest.json', $manifest);\"",
    "_generate-changelog": "node generate-json-changelog.js",
    "_merge-develop-to-master": "git checkout master && git merge develop --ff-only && git checkout develop",
    "_push-everything": "git push --all && git push --tags"
  },
  "author": "gergooo <abrahamgergo@gmail.com>",
  "license": "no license",
  "devDependencies": {
    "@types/selenium-webdriver": "^4.0.10",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "codecov": "^3.8.1",
    "eslint": "^7.14.0",
    "eslint-config-google": "^0.14.0",
    "geckodriver": "^1.20.0",
    "jsdom": "^16.4.0",
    "mocha": "^8.2.1",
    "node-cmd": "^4.0.0",
    "node-fetch": "^2.6.0",
    "npm-run-all": "^4.1.5",
    "nyc": "^15.1.0",
    "selenium-webdriver": "^4.0.0-alpha.7",
    "sinon": "^9.2.1",
    "sinon-chai": "^3.5.0",
    "web-ext": "^5.4.0"
  },
  "mocha": {
    "recursive": true,
    "file": "./test/setup.js",
    "inline-diffs": true
  },
  "prettier": {
    "singleQuote": true,
    "htmlWhitespaceSensitivity": "strict"
  }
}
